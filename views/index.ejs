<!-- filepath: d:\CC_Blockchain\Retro\views\index.ejs -->
<!DOCTYPE html>
<html>

  <head>
    <title>Web3 App</title>
    <link rel="stylesheet" href="/stylesheets/style.css" />
    <script src="https://cdn.jsdelivr.net/npm/web3/dist/web3.min.js"></script>
  </head>

  <body>
    <h1>Web3 Application</h1>
    <form id="transactionForm">
      <label for="platform">Platform:</label>
      <select id="platform" name="platform">
        <option value="eth">Ethereum</option>
        <option value="btc">Bitcoin</option>
        <option value="ltc">Litecoin</option>
      </select>
      <br />

      <label for="address">Sender Address:</label>
      <input type="text" id="address" name="address" required />
      <br />

      <label for="amount">Amount:</label>
      <input type="number" id="amount" name="amount" required />
      <br />

      <label for="message">Message:</label>
      <input type="text" id="message" name="message" />
      <br />

      <label for="keyword">Keyword for NFT Image:</label>
      <input type="text" id="keyword" name="keyword" required />
      <br />
      <label for="keyword">Keyword for NFT Image:</label>
      <input type="text" id="keyword" name="keyword" required />
      <button type="button" id="generateButton">Generate</button>
      <br />
      <div id="imagePreview" style="margin-top: 10px;">
        <p>Generated Image Preview:</p>
        <img id="previewImage" src="" alt="Preview will appear here" width="256" />
      </div>
      <br />

      <script>
        const generateButton = document.getElementById('generateButton');
        const previewImage = document.getElementById('previewImage');

        generateButton.addEventListener('click', async () => {
          const keyword = document.getElementById('keyword').value;

          if (!keyword) {
            alert('Please enter a keyword!');
            return;
          }

          try {
            // Fetch the AI-generated image from the backend
            const response = await fetch('/generate-image', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ keyword }),
            });

            const result = await response.json();
            if (result.success) {
              previewImage.src = result.image; // Display the generated image
            } else {
              alert('Failed to generate image: ' + result.error);
            }
          } catch (error) {
            console.error(error);
            alert('An error occurred while generating the image.');
          }
        });
      </script>

      <button type="button" id="sendButton">Send</button>
    </form>

    <h2>Last 10 Transactions</h2>
    <table border="1">
      <thead>
        <tr>
          <th>Platform</th>
          <th>Sender</th>
          <th>Amount</th>
          <th>Message</th>
          <th>Image</th>
        </tr>
      </thead>
      <tbody id="transactionTable">
        <!-- Transactions will be dynamically added here -->
      </tbody>
    </table>

    <script>
      const sendButton = document.getElementById('sendButton');
      const transactionTable = document.getElementById('transactionTable');

      sendButton.addEventListener('click', async () => {
        if (typeof window.ethereum === 'undefined') {
          alert('MetaMask is not installed!');
          return;
        }

        const platform = document.getElementById('platform').value;
        const address = document.getElementById('address').value;
        const amount = document.getElementById('amount').value;
        const message = document.getElementById('message').value;
        const keyword = document.getElementById('keyword').value;

        try {
          // Request account access
          const accounts = await ethereum.request({ method: 'eth_requestAccounts' });
          const sender = accounts[0];

          // Prepare transaction data
          const transactionParams = {
            to: address, // Recipient address
            from: sender, // Sender address
            value: Web3.utils.toHex(Web3.utils.toWei(amount, 'ether')), // Amount in Wei
          };

          // Send transaction using MetaMask
          await ethereum.request({
            method: 'eth_sendTransaction',
            params: [transactionParams],
          });

          // Send transaction details to the backend
          const response = await fetch('/send-transaction', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ platform, sender, address, amount, message, keyword }),
          });

          const result = await response.json();
          if (result.success) {
            alert('Transaction successful!');
            // Update the transaction table
            const newRow = document.createElement('tr');
            newRow.innerHTML = `
              <td>${platform}</td>
              <td>${sender}</td>
              <td>${amount}</td>
              <td>${message}</td>
              <td><img src="${result.image}" alt="NFT Image" width="50" /></td>
            `;
            transactionTable.prepend(newRow);
          } else {
            alert('Transaction failed: ' + result.error);
          }
        } catch (error) {
          console.error(error);
          alert('An error occurred while sending the transaction.');
        }
      });
    </script>
  </body>

</html>